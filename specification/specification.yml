openapi: 3.1.0
info:
  title: "API сервер для личного проекта «Что посмотреть»"
  description: |-
    * Список ресурсов и маршрутов сервера «Что посмотреть».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: movies
    description: Действия с фильмами.
  - name: favorites
    description: Действия с фильмами, добавленными в список "К просмотру".
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация нового пользователя.
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для регистрации нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким e-mail уже зарегистрирован.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя.
      description: Осуществляется вход на основании логина и пароля.

      requestBody:
        description: Объект, содержащий логин и пароль пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true

      responses:
        "200":
          description: Статус авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorizedUser'

        "400":
          description: Ошибка запроса.

        "404":
          description: Пользователь не найден.

    get:
      tags:
        - users
      summary: Проверка авторизации пользователя.
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "200":
          description: Статус авторизации пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorizedUser"

        "401":
          description: Пользователь не авторизован.

  /users/{userID}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара пользователя.
      description: Загружает изображение аватара пользователя. изображение аватара должно быть в формате '.png' или '.jpg'

      parameters:
        - name: userID
          in: path
          description: Уникальный идентификатор пользователя.
          required: true
          schema:
            type: number
            example: 001

      responses:
        "201":
          description: Данные пользователя изменены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorizedUser'

        "400":
          description: Ошибка тела запроса.

  /users/logout:
    delete:
      tags:
        - users
      summary: Завершить сеанс пользователя.
      description: Завершает сеанс работы - выход из закрытой части приложения.

      responses:
        "204":
          description: Сеанс завершен.

  /movies:
    post:
      tags:
        - movies
      summary: Добавление нового фильма.
      description: Возвращает фильм с идентификатором movieID в виде объекта.

      requestBody:
        description: Объект с новым фильмом.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newMovie'
        required: true

      responses:
        "201":
          description: Фильм добавлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'

        "400":
          description: Ошибка тела запроса.

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - movies
      summary: Получение списка фильмов.
      description: Возвращает массив фильмов. Каждый фильм описан в виде массивов.

      parameters:
        - name: quantity
          in: query
          description: Количество фильмов, которые возвращает сервис.
          schema:
            type: number
            example: 30

      responses:
        "200":
          description: Массив фильмов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movies'

  /movies/{movieID}:
    post:
      tags:
        - movies
      summary: Редактирование информации по фильму.
      description: Возвращает измененную информацию по фильму с идентификатором movieID в виде объекта.

      requestBody:
        description: Объект с измененной информацией по фильму.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editedMovie'
        required: true

      responses:
        "201":
          description: Фильм изменен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'

        "400":
          description: Ошибка тела запроса.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Нет доступа (запрещено).

    get:
      tags:
        - movies
      summary: Получение информации по фильму.
      description: Получает детальную информацию по фильму с идентификатором movieID в виде объекта.

      responses:
        "200":
          description: Объект фильма.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'

        "404":
          description: Фильм не найден.

    delete:
      tags:
        - movies
      summary: Удаление фильма.
      description: Удаляет фильм с идентификатором movieID.

      responses:
        "200":
          description: Фильм удален.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Страница не доступна (нет доступа).

  /movies/genreMovie:
    get:
      tags:
        - movies
      summary: Получение списка фильмов выбранного жанра.
      description: Возвращает массив фильмов. Каждый фильм описан в виде объекта.

      responses:
        "200":
          description: Массив фильмов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movies'

  /promo:
    get:
      tags:
        - movies
      summary: Получение промо-фильма.
      description: Возвращает промо-фильм в виде объекта.

      responses:
        "200":
          description: Объект фильма.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movies'

  /favorites/{movieID}/{status}:
    post:
      tags:
        - movies
      summary: Добавление нового фильма.
      description: Возвращает фильм с идентификатором movieID с актуальным состоянием поля isFavorite в виде объекта.

      parameters:
        - name: movieID
          in: path
          description: Уникальный идентификатор фильма.
          required: true
          schema:
            type: number
            example: 003

        - name: status
          in: path
          description: Статус фильма. Может быть "1" или "0". Где 1 добавляет фильм "К просмотру", 0 - удаляет.
          required: true
          schema:
            type: number
            example: 1

      responses:
        "200":
          description: Объект фильма.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'

        "401":
          description: Пользователь не авторизован.

  /favorites:
    get:
      tags:
        - movies
      summary: Получение списка фильмов "К просмотру".
      description: Возвращает массив фильмов, добавленных "К просмотру". Каждый фильм описан в виде объекта.

      responses:
        "200":
          description: Массив фильмов, добавленных в список "К просмотру".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movies'

        "400":
          description: Пользователь не авторизован.

  /comments/{movieID}:
    post:
      tags:
        - movies
      summary: Добавление комментария к фильму.
      description: Добавляет новый комментарий к фильму.

      parameters:
        - name: movieID
          in: path
          description: Уникальный идентификатор фильма.
          required: true
          schema:
            type: number
            example: 003

        - name: quantity
          in: query
          description: Количество последних комментариев к фильму, которые возвращает сервис.
          schema:
            type: number
            example: 20

      requestBody:
        description: Объект с новым комментарием.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newComment'
        required: true

      responses:
        "201":
          description: Фильм изменен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'

        "400":
          description: Ошибка тела запроса.

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - movies
      summary: Получение списка комментариев.
      description: Возвращает список комментариев с идентификатором movieID. Каждый комментарий описан в виде объекта.

      responses:
        "200":
          description: Массив комментариев.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'

components:
  schemas:
    newMovie:
      type: object

      properties:
        titleMovie:
          type: string
          example: Aviator

        description:
          type: string
          example: A biopic depicting the early years of legendary director and aviator Howard Hughes' career from the late 1920s to the mid 1940s.

        genreMovie:
          type: string
          example: Drama

        releaseYear:
          type: number
          example: 2004

        moviePreviewLink:
          type: string
          example: https://www.youtube.com/watch?v=FebPJlmgldE

        movieVideoLink:
          type: string
          example: https://www.youtube.com/watch?v=xWU-IVcPqHk

        actors:
          type: array
          items:
            type: string
            example: Leonardo DiCaprio

        producer:
          type: string
          example: Martin Scorsese

        duration:
          type: number
          example: 163

        userID:
          type: string
          example: 84jasvjhg5fd

        poster:
          type: string
          example: https://avatars.mds.yandex.net/get-kinopoisk-image/1704946/10fcbd4a-43ee-4ae0-a564-5558574185d8/3840x

        backgroundImage:
          type: string
          example: https://yandex.ru/images/search?text=background+Images+jpg&img_url=https%3A%2F%2Fres.allmacwallpaper.com%2Fget%2FRetina-MacBook-Pro-15-inch-wallpapers%2FUnderwater-2880x1800%2F2922-8.jpg&pos=9&rpt=simage&stype=image&lr=62&parent-reqid=1679694050935135-12164990087383630875-balancer-l7leveler-kubr-yp-sas-5-BAL-1985&source=serp

        backgroundColor:
          type: string
          example: '0054d1'

    editedMovie:
      type: object

      properties:
        titleMovie:
          type: string
          example: Aviator

        description:
          type: string
          example: A biopic depicting the early years of legendary director and aviator Howard Hughes' career from the late 1920s to the mid 1940s.

        genreMovie:
          type: string
          example: Drama

        releaseYear:
          type: number
          example: 2004

        moviePreviewLink:
          type: string
          example: https://www.youtube.com/watch?v=FebPJlmgldE

        movieVideoLink:
          type: string
          example: https://www.youtube.com/watch?v=xWU-IVcPqHk

        actors:
          type: array
          items:
            type: string
            example: Leonardo DiCaprio

        producer:
          type: string
          example: Martin Scorsese

        duration:
          type: number
          example: 163

        userID:
          type: string
          example: 5489232qwetu

        poster:
          type: string
          example: https://avatars.mds.yandex.net/get-kinopoisk-image/1704946/10fcbd4a-43ee-4ae0-a564-5558574185d8/3840x

        backgroundImage:
          type: string
          example: https://yandex.ru/images/search?text=background+Images+jpg&img_url=https%3A%2F%2Fres.allmacwallpaper.com%2Fget%2FRetina-MacBook-Pro-15-inch-wallpapers%2FUnderwater-2880x1800%2F2922-8.jpg&pos=9&rpt=simage&stype=image&lr=62&parent-reqid=1679694050935135-12164990087383630875-balancer-l7leveler-kubr-yp-sas-5-BAL-1985&source=serp

        backgroundColor:
          type: string
          example: '0047ab'

        movieID:
          type: number
          example: 543

    movie:
      type: object

      properties:
        titleMovie:
          type: string
          example: Aviator

        description:
          type: string
          example: A biopic depicting the early years of legendary director and aviator Howard Hughes' career from the late 1920s to the mid 1940s.

        publicationDate:
          type: string
          format: date-time
          example: 2023-01-01T00:00:00.000Z

        genreMovie:
          type: string
          example: Drama

        releaseYear:
          type: number
          example: 2004

        rating:
          type: number
          example: 7.6

        moviePreviewLink:
          type: string
          example: https://www.youtube.com/watch?v=FebPJlmgldE

        movieVideoLink:
          type: string
          example: https://www.youtube.com/watch?v=xWU-IVcPqHk

        actors:
          type: array
          items:
            type: string
            example: Leonardo DiCaprio

        producer:
          type: string
          example: Martin Scorsese

        duration:
          type: number
          example: 163

        comments:
          type: number
          example: 55

        userID:
          type: string
          example: 84jasvjhg5fd

        poster:
          type: string
          example: https://avatars.mds.yandex.net/get-kinopoisk-image/1704946/10fcbd4a-43ee-4ae0-a564-5558574185d8/3840x

        backgroundImage:
          type: string
          example: https://yandex.ru/images/search?text=background+Images+jpg&img_url=https%3A%2F%2Fres.allmacwallpaper.com%2Fget%2FRetina-MacBook-Pro-15-inch-wallpapers%2FUnderwater-2880x1800%2F2922-8.jpg&pos=9&rpt=simage&stype=image&lr=62&parent-reqid=1679694050935135-12164990087383630875-balancer-l7leveler-kubr-yp-sas-5-BAL-1985&source=serp

        backgroundColor:
          type: string
          example: '0054d1'

    movies:
      type: array

      items:
        type: object

        properties:
          titleMovie:
            type: string
            example: Aviator

          publicationDate:
            type: string
            format: date-time
            example: 2023-01-01T00:00:00.000Z

          genreMovie:
            type: string
            example: Drama

          moviePreviewLink:
            type: string
            example: https://www.youtube.com/watch?v=FebPJlmgldE

          comments:
            type: number
            example: 33

          userID:
            type: string
            example: 84jasvjhg5fd

          poster:
            type: string
            example: https://avatars.mds.yandex.net/get-kinopoisk-image/1704946/10fcbd4a-43ee-4ae0-a564-5558574185d8/3840x

    newComment:
      type: object

      properties:
        comment:
          type: string
          example: Film is greatest.

        rating:
          type: number
          example: 7.6

        publicationDate:
          type: string
          format: date-time
          example: 2023-01-01T00:00:00.000Z

        userID:
          type: string
          example: 84jasvjhg5fd

    comments:
      type: array

      items:
        type: object

        properties:
          comment:
            type: string
            example: Film is greatest.

          rating:
            type: number
            example: 7.6

          publicationDate:
            type: string
            format: date-time
            example: 2023-01-01T00:00:00.000Z

          userID:
            type: string
            example: 5489232qwetu

    newUser:
      type: object

      properties:
        name:
          type: string
          example: Petrov Petr

        email:
          type: string
          example: mail@mail.ru

        password:
          type: string
          example: pass6428

    user:
      type: object

      properties:
        name:
          type: string
          example: Petrov Petr

        email:
          type: string
          example: mail@mail.ru

        password:
          type: string
          example: pass6428

        avatar:
          type: string
          example: https://avatarko.ru/kartinka/8126

    login:
      type: object

      properties:
        email:
          type: string
          example: mail@mail.ru

        password:
          type: string
          example: pass6428

    authorizedUser:
      type: object

      properties:
        name:
          type: string
          example: Petrov Petr

        email:
          type: string
          example: mail@mail.ru

        password:
          type: string
          example: pass6428

        avatar:
          type: string
          example: https://avatarko.ru/kartinka/8126

        token:
          type: string
          example: ghdjkklgfdhgjkn654bvc3u987ytgf
